{"name":"AI-based PRD Reviewer","elevator":null,"project":null,"description":"AI tool for PRD analysis, grading, and actionable feedback.","budget":"unknown","revenue_model":"unknown","market_orientation":"unknown","personal":false,"planning":{"stage":"user_personas","stage_status":"generating","user_personas":null,"user_stories":null,"rhino_modules":{"planned":[{"model":"User","provided_by":"rhino_project_core"}]},"data_model":{"planned":[{"model":"Folder","table":"folders","columns":[{"name":"name","type":"string"},{"name":"user_id","type":"bigint"}],"rhino_owner":"user","validations":["validates :name, presence: true","validates :name, uniqueness: { scope: :user_id }"],"associations":[{"name":":user","type":"belongs_to"},{"name":":emails","type":"has_many"}],"model_content":"class Folder \u003c ApplicationRecord\n  belongs_to :user\n  has_many :emails, dependent: :destroy\n\n  rhino_owner :user\n  rhino_references [:user]\n\n  validates :name, presence: true\n  validates :name, uniqueness: { scope: :user_id }\nend","migration_content":"class CreateFolders \u003c ActiveRecord::Migration[7.2]\n  def change\n    create_table :folders do |t|\n      t.string :name, null: false\n      t.references :user, null: false, foreign_key: true\n\n      t.timestamps\n    end\n    add_index :folders, [:name, :user_id], unique: true\n  end\nend","rails_model_generation_command_line":"rails generate model Folder name:string user:references"},{"model":"Label","table":"labels","columns":[{"name":"name","type":"string"},{"name":"user_id","type":"bigint"}],"rhino_owner":"user","validations":["validates :name, presence: true","validates :name, uniqueness: { scope: :user_id }"],"associations":[{"name":":user","type":"belongs_to"},{"name":":email_labels","type":"has_many"},{"name":":emails","type":"has_many"}],"model_content":"class Label \u003c ApplicationRecord\n  belongs_to :user\n  has_many :email_labels, dependent: :destroy\n  has_many :emails, through: :email_labels\n\n  rhino_owner :user\n  rhino_references [:user]\n\n  validates :name, presence: true\n  validates :name, uniqueness: { scope: :user_id }\nend","migration_content":"class CreateLabels \u003c ActiveRecord::Migration[7.2]\n  def change\n    create_table :labels do |t|\n      t.string :name, null: false\n      t.references :user, null: false, foreign_key: true\n\n      t.timestamps\n    end\n    add_index :labels, [:name, :user_id], unique: true\n  end\nend","rails_model_generation_command_line":"rails generate model Label name:string user:references"},{"model":"Email","table":"emails","columns":[{"name":"subject","type":"string"},{"name":"body","type":"text"},{"name":"sender","type":"string"},{"name":"recipient","type":"string"},{"name":"read","type":"boolean"},{"name":"user_id","type":"bigint"},{"name":"folder_id","type":"bigint"}],"rhino_owner":"user","validations":["validates :subject, presence: true","validates :sender, presence: true","validates :recipient, presence: true","validates :body, presence: true"],"associations":[{"name":":user","type":"belongs_to"},{"name":":folder","type":"belongs_to"},{"name":":email_labels","type":"has_many"},{"name":":labels","type":"has_many"}],"model_content":"class Email \u003c ApplicationRecord\n  belongs_to :user # The recipient/owner of the email\n  belongs_to :folder\n\n  has_many :email_labels, dependent: :destroy\n  has_many :labels, through: :email_labels\n\n  rhino_owner :user\n  rhino_references [:user, :folder]\n\n  validates :subject, presence: true\n  validates :sender, presence: true\n  validates :recipient, presence: true\n  validates :body, presence: true\nend","migration_content":"class CreateEmails \u003c ActiveRecord::Migration[7.2]\n  def change\n    create_table :emails do |t|\n      t.string :subject, null: false\n      t.text :body, null: false\n      t.string :sender, null: false\n      t.string :recipient, null: false\n      t.boolean :read, default: false, null: false\n      t.references :user, null: false, foreign_key: true # The user who owns this email (recipient)\n      t.references :folder, null: false, foreign_key: true\n\n      t.timestamps\n    end\n  end\nend","rails_model_generation_command_line":"rails generate model Email subject:string body:text sender:string recipient:string read:boolean user:references folder:references"},{"model":"EmailLabel","table":"email_labels","columns":[{"name":"email_id","type":"bigint"},{"name":"label_id","type":"bigint"}],"rhino_owner":"email","validations":["validates :email_id, uniqueness: { scope: :label_id }"],"associations":[{"name":":email","type":"belongs_to"},{"name":":label","type":"belongs_to"}],"model_content":"class EmailLabel \u003c ApplicationRecord\n  belongs_to :email\n  belongs_to :label\n\n  rhino_owner :email\n  rhino_references [:email, :label]\n\n  validates :email_id, uniqueness: { scope: :label_id }\nend","migration_content":"class CreateEmailLabels \u003c ActiveRecord::Migration[7.2]\n  def change\n    create_table :email_labels do |t|\n      t.references :email, null: false, foreign_key: true\n      t.references :label, null: false, foreign_key: true\n\n      t.timestamps\n    end\n    add_index :email_labels, [:email_id, :label_id], unique: true\n  end\nend","rails_model_generation_command_line":"rails generate model EmailLabel email:references label:references"},{"model":"User","provided_by":"rhino_project_core"}]}}}